/*BETWEEN*/
--PERMITE LA SELECCION DE UN RANGO
SELECT *
FROM TBL_NOTAS
WHERE NOTA BETWEEN 10 AND 39 
ORDER BY NOTA;

/*HAVING*/
/*having que permite limitar el resultado de una funcion de agregado ES COMO UN WHERE PERO SOLO PARA FUNCIONES DE AGREGADOS*/
--TRAER ALUMNO CUYA NOTA SEA SUPERIO A 80
SELECT  NOTA , RUT_ALUMNO , SUM(NOTA) 
FROM TBL_NOTAS
GROUP BY  NOTA , RUT_ALUMNO
HAVING SUM(NOTA) >=80


--INVERTIR LA RESPUESTE DE * MENOR A MAYOR *
SELECT RUT , DV, NOMBRES, apePaterno, apeMaterno, ID_NACIONALIDAD, ACTIVO 
FROM TBL_ALUMNO 
ORDER BY RUT ASC; -- NOS PERMITE DE MENOR A MAYOR /*ASCENDENTE*/


--INVERTIR LA RESPUESTE DE * MAYOR A MENOR *
SELECT RUT , DV, NOMBRES, apePaterno, apeMaterno, ID_NACIONALIDAD, ACTIVO 
FROM TBL_ALUMNO 
ORDER BY RUT DESC; -- NOS PERMITE DE MAYOR A MENOR /*DECENDENTE*/

/*INDICAR ORDEN ESPECIFICO*/
SELECT RUT , DV, NOMBRES, apePaterno, apeMaterno, ID_NACIONALIDAD, ACTIVO 
FROM TBL_ALUMNO 
ORDER BY apePaterno , apeMaterno , NOMBRES ASC; 


--Funciones de Agregados

--MIN , MAX , SIM , COUNT , AVG

SELECT MIN(COD_EMPLEADO) 'CODIGO MENOR' ,
 MAX(COD_EMPLEADO) 'CODIGO MAYOR',
 SUM(COD_EMPLEADO) 'SUMA DE LA COLUMNA',
 COUNT(COD_EMPLEADO) 'CANTIDAD EMPLEADO',
 AVG(COD_EMPLEADO) 'PROMEDIO DE CODIGO EMPLEADO'
FROM EMPLEADO



--POTENCIAR UN SELECT 
SELECT rut, dv,apPaterno,apMaterno,
CASE activo
      WHEN 0 THEN 'Alumno No Activo en el sistema'
      WHEN 1 THEN 'Alumno Activo en el sistema'
      ELSE 'Valor Incorrecto '
END 'Activo en el Sistema'
 
  FROM ALUMNO;